
# move status line to top
set -g status-position top

# New splits
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# change keybinding for window commands

bind k kill-window
bind x kill-pane
bind -n C-PgUp previous-window
bind -n C-PgDn next-window
bind -n C-t new-window
#Not working
#unbind S-C-t new-window
#unbind S-C-w kill-window
#bind -n C-S-w kill-window
#bind -n C-S-t new-window


# Use Alt-arrow keys without prefix key to switch panes
# NOTE: I removed these because they interfered with emacs
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D
# Use shift pg to move windows
bind -n S-PgUp swap-window -t -1
bind -n S-PgDn swap-window -t +1

# Makes Ctrl+b b send prefix to nested sessions
bind-key b send-prefix

# Ctrl+b = synchronizes panes
# bind = set -g synchronize-panes
#Experiment to improve nested sessions
#bind-key b send-prefix \; send-keys |

# tirar o tempo de espera depois do prefix
set-option -g repeat-time 0

#para desactivar a sessão mais alta quando estão nested

bind -T root F9  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=white,bg=white" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\

bind -T off F9 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\

bind e set-window-option synchronize-panes

# Smart pane switching with awareness of vim splits
is_vim_emacs='echo "#{pane_current_command}" | \
    grep -iqE "((^|\/)g?(view|n?vim?x?)(diff)?$)|emacs"'

# enable in root key table
bind Left if-shell "$is_vim_emacs" "send-keys C-h" "select-pane -L"
bind Down if-shell "$is_vim_emacs" "send-keys C-j" "select-pane -D"
bind Up if-shell "$is_vim_emacs" "send-keys C-k" "select-pane -U"
bind Right if-shell "$is_vim_emacs" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim_emacs" "send-keys C-\\" "select-pane -l"

# enable in copy mode key table
bind -Tcopy-mode-vi C-h if-shell "$is_vim_emacs" "send-keys C-h" "select-pane -L"
bind -Tcopy-mode-vi C-j if-shell "$is_vim_emacs" "send-keys C-j" "select-pane -D"
bind -Tcopy-mode-vi C-k if-shell "$is_vim_emacs" "send-keys C-k" "select-pane -U"
bind -Tcopy-mode-vi C-l if-shell "$is_vim_emacs" "send-keys C-l" "select-pane -R"
bind -Tcopy-mode-vi C-\ if-shell "$is_vim_emacs" "send-keys C-\\" "select-pane -l"
